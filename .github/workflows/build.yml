name: build
on:
  push:
    paths-ignore:
      - "README.md"
      - "architecture.md"
  pull_request:
    paths-ignore:
      - "README.md"
      - "architecture.md"
  release:
    types: [created]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: download base
        run: wget https://www.dropbox.com/s/ijxqnoaxn88r4mm/twitch-10.7-0.apk\?\dl=1 -O twitch.apk
      - name: create keystore.kjs from secret
        run: echo "${{ secrets.KEYSTORE }}" | base64 -d > keystore.jks
      - name: run build
        run: docker run --rm -v $(pwd)/twitch.apk:/usr/build/twitch.apk -v $(pwd)/dist:/usr/build/dist -v $(pwd)/mod:/usr/build/mod -v $(pwd)/monke.patch:/usr/build/monke.patch -v $(pwd)/keystore.jks:/usr/build/keystore.jks -e KS=/usr/build/keystore.jks -e KSPASS=${{ secrets.KSPASS }} ghcr.io/bttv-android/builder
      - name: print checksums
        run: cp dist/twitch.apk bttv.apk && shasum *.apk
      - uses: actions/upload-artifact@v2
        if: github.event_name == 'release'
        with:
          name: bttv-apk
          path: bttv.apk
          retention-days: 1
  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bttv-apk
      - run: echo "version_tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: upload Release Apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/twitch.apk
          asset_name: bttv-${{ env.version_tag }}.apk
          asset_content_type: application/vnd.android.package-archive
